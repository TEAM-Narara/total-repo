user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}


http {
    resolver 127.0.0.11 valid=30s;  # Docker의 내장 DNS 사용

    limit_req_zone $binary_remote_addr zone=ip_limit:10m rate=10r/s;

    server {
        listen 80;
        server_name 43.203.221.42 k11s107.p.ssafy.io superboard.info;

        # HTTP 요청을 HTTPS로 리디렉션
        return 301 https://$host$request_uri;
    }

    upstream total-server {
        server 43.203.221.42:8080; # steach-server 애플리케이션이 사용하는 포트 설정
    }

    server {
        listen 443 ssl;
        server_name 43.203.221.42 k11s107.p.ssafy.io superboard.info;

        ssl_certificate /etc/letsencrypt/live/k11s107.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/k11s107.p.ssafy.io/privkey.pem;

        location /api {
            proxy_pass http://total-server; # 요청을 total-server 애플리케이션으로 전달
            proxy_set_header Host $host; # 원본 호스트 헤더 전달
            proxy_set_header X-Real-IP $remote_addr; # 클라이언트의 IP 주소 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 프록시를 통한 클라이언트 IP 주소 전달
            proxy_set_header X-Forwarded-Proto $scheme; # 요청 프로토콜 전달

        }
    }
    # 일반 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main; # main은 로그 형식을 지정하는 이름
    error_log /var/log/nginx/error.log; # 경로 log_level  # 기본 로그 레벨은 error입니다.

    # 커스텀 로그 포맷 설정
    log_format custom_log_format '$remote_addr - $remote_user [$time_local] "$request" '
                                 'limit_req_status=$limit_req_status $status '
                                 '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/api_access.log custom_log_format;

}