//sonarqube
// build.gradle 에서 ext로 정의
def jacocoDir = layout.buildDirectory.dir('customJacocoReportDir').get().asFile
def void property(java.lang.String string1, java.lang.String string2) {}

sonarqube {
    properties {
        property "sonar.projectName", "total-server"
        property "sonar.projectKey", "total-server"
        property "sonar.host.url", "http://43.203.221.42:9000"
        property "sonar.token", "squ_14e80213ee00a095e5d3cd103c58086da006b629"
        property "sonar.language", "java"
        property 'sonar.projectVersion', '1.1.0-SNAPSHOT'
        property "sonar.sourceEncoding", "UTF-8"

        property 'sonar.test.inclusions', '**/*Test.java'
        property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/**'
        property "sonar.sources", "src/main/java"

        property "sonar.java.binaries", "${projectDir}/build/classes/java/main"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoDir}/jacocoTestReport.xml" // JaCoCo에서 생성한 XML 경로

// 이는 메서드의 복잡도가 10을 초과하면 경고를 표시합니다.
        property "sonar.java.metrics.methodComplexityThreshold", "10"

//        property 'sonar.coverage.jacoco.xmlReportPaths', jacocoDir.map { it.file('jacocoTestReport.xml') }.get().asFile.path
//        Execution failed for task ':sonar'.
//        > No signature of method: java.lang.String.map() is applicable for argument types: (sonarqube_d3d6am1yjzld9akvhilqh5kp0$_run_closure1$_closure2$_closure3) values: [sonarqube_d3d6am1yjzld9akvhilqh5kp0$_run_closure1$_closure2$_closure3@2b93b8]
//        Possible solutions: tap(groovy.lang.Closure), md5(), wait(), dump(), any(), grep()

    }
}

